{{ define "itemdesc" }}
          {{ range .Items }}
          <div id="item-{{ .Id }}-tooltip" style="display: none;">
            <div class="itemPopupContainer newItemPopup {{ ItemRarityType .FrameType }}">

            {{ if .ArtFilename }}
            <!-- Divination card -->
            <div class="cardFace">
                <img src="https://web.poecdn.com/image/gen/divination_cards/{{ .ArtFilename }}.png">
            </div>
            <div class="itemBoxContent">
              <div class="itemHeader">
                <span class="l"></span>
                <div class="itemName">
                  <span class="lc">{{ .Type }}</span>
                </div>
                <span class="r"></span>
              </div>

              <div class="stackSize">{{ .StackSize }}/{{ .MaxStackSize }}</div>
              <div class="explicitModsWrapper">
                <div class="explicitModsContainer">
                  {{ range .ExplicitMods }}
                      {{ PoEMarkup . }}
                  {{ end }}
                </div>
              </div>

              <div class="flavourTextWrapper">
                <div class="flavourTextContainer">
                  <div class="flavourText"><span class="lc">
                    <span class="lc">
                    {{ range .FlavorText }}
                      {{ PoEMarkupLinesOnly . }}<br />
                    {{ end }}
                  </div>
                </div>
              </div>
            </div>

              <!-- !Divination card -->
            {{ else }}

              <div class="itemBoxContent">
                <div class="itemHeader {{ ItemRarityHeight .FrameType }} {{ if .IsElder }}elder{{ end }} {{ if .IsShaper }}shaper{{ end }}">
                  <span class="l"></span>
                  {{ if .Name }}
                  <div class="itemName">
                    <span class="lc">{{ .Name }}</span>
                  </div>
                  <div class="itemName typeLine">
                    <span class="lc">{{ .Type }}</span>
                  </div>
                  {{ else if .Hybrid.IsVaalGem }}
                  <div class="itemName">
                    <span class="lc">{{ .Hybrid.BaseTypeName }}</span>
                  </div>
                  {{ else }}
                  <div class="itemName">
                    <span class="lc">{{ .Type }}</span>
                  </div>
                  {{ end }}
                  <span class="r"></span>
                </div>

                <div class="content">

                    {{ if .Properties }}
                      {{ range .Properties }}
                      <div class="displayProperty">
                        <span class="s">
                          <span>{{ .Name }}</span> {{ if gt (len .Values) 0 }} : {{ end }}
                            {{ range .Values }}
                              <span class="{{ ColorType (index . 1) }}">{{ (index . 0) }}</span>
                            {{ end }}
                        </span>
                      </div>
                      {{ end }}
                    {{ end }}

                    {{ if .ItemLevel }}
                    <div class="displayProperty">
                      <span class="s">Item Level: <span class="colourDefault">{{ .ItemLevel }}</span></span>
                    </div>
                    {{ end }}

                    {{ if .SecondDescriptionText }}
                    <div class="separator"></div>
                    <div class="secDescrText">
                      <span>{{ .SecondDescriptionText | WordWrap }}</span>
                    </div>
                    {{ end }}

                    {{ if .Requirements }}
                    <div class="separator"></div>
                    <div class="requirements">
                      <span class="lc">Requires
                      {{ range .Requirements }}
                          <span>{{ .Name }}</span>
                          {{ range .Values }}
                            <span class="{{ ColorType (index . 1) }}">{{ (index . 0) }}</span>
                          {{ end }}
                      {{ end }}
                      </span>
                    </div>
                    {{ end }}

                    {{ if .EnchantMods }}
                    <div class="separator"></div>
                      {{ range .EnchantMods }}
                      <div class="enchantMod">
                        <span class="s">{{ . }}</span>
                      </div>
                      {{ end }}
                    {{ end }}

                    {{ if .ImplicitMods }}
                      <div class="separator"></div>
                      {{ range .ImplicitMods }}
                        <div class="implicitMod">
                          <span class="s">{{ . }}</span>
                        </div>
                      {{ end }}
                    {{ end }}

                    {{ if not .IsIdentified }}
                    <div class="unmet">
                      <div class="separator"></div>
                      <span class="lc">Unidentified</span>
                    </div>
                    {{ else }}

                      {{ if .ExplicitMods }}
                        <div class="separator"></div>
                        {{ range .ExplicitMods }}
                        <div class="explicitMod">
                          <span class="s">{{ . }}</span>
                        </div>
                        {{ end }}
                      {{ end }}

                      {{ if .CraftedMods }}
                        {{ range .CraftedMods }}
                        <div class="craftedMod">
                          <span class="s">{{ . }}</span>
                        </div>
                        {{ end }}
                      {{ end }}

                      <!-- Vaal gem additional properties -->
                      {{ if .Hybrid.IsVaalGem }}
                      {{ $name := .Type }}
                      {{ with .Hybrid }}

                        <div class="separator"></div>
                        <div class="vaalHeader">
                            <div class="itemName typeLine">
                                <span class="lc">{{ $name }}</span>
                            </div>
                        </div>

                        {{ if .SecondDescriptionText }}
                        <div class="separator"></div>
                        <div class="secDescrText">
                          <span>{{ .SecondDescriptionText | WordWrap }}</span>
                        </div>
                        {{ end }}

                        {{ if .Properties }}
                          <div class="separator"></div>
                          {{ range .Properties }}
                          <div class="displayProperty">
                            <span class="s">
                              <span>{{ .Name }}</span> {{ if gt (len .Values) 0 }} : {{ end }}
                                {{ range .Values }}
                                  <span class="{{ ColorType (index . 1) }}">{{ (index . 0) }}</span>
                                {{ end }}
                            </span>
                          </div>
                          {{ end }}
                        {{ end }}

                        {{ if .ExplicitMods }}
                          <div class="separator"></div>
                          {{ range .ExplicitMods }}
                          <div class="explicitMod">
                            <span class="s">{{ . }}</span>
                          </div>
                          {{ end }}
                        {{ end }}

                      {{ end }}
                      {{ end }}
                      <!-- !vaal -->

                      {{ if .IsCorrupted }}
                      <div class="unmet">
                        <span class="lc">Corrupted</span>
                      </div>
                      {{ end }}

                      {{ if .AdditionalProperties }}
                        <div class="separator"></div>
                        {{ $prop := index .AdditionalProperties 0 }}
                        <div class="additionalProperty">
                          <span class="lc">
                            <span class="experienceBar">
                              <span class="fill">
                                <span style="width: {{ ConvToCssProgress $prop.Progress }};"></span>
                              </span>
                            </span>
                            <span class="colourDefault">{{ index (index $prop.Values 0) 0 }}</span>
                          </span>
                        </div>
                      {{ end }}

                      {{ if .FlavorText }}
                        {{ if .ExplicitMods }}
                        <div class="separator"></div>
                        {{ end }}
                      <div class="flavourText">
                        <span class="lc">
                        {{ range .FlavorText }}
                          {{ . }}<br />
                        {{ end }}
                        </span>
                      </div>
                      {{ end }}

                      {{ if .DescriptionText }}
                      <div class="separator"></div>
                      <div class="descrText">
                        <span>{{ .DescriptionText | WordWrap }}</span>
                      </div>
                      {{ end }}

                      {{ if .Note }}
                      <div class="separator"></div>
                      <div class="textCurrency itemNote">{{ .Note }}</div>
                      {{ end }}

                    {{ end }}
                </div>
              </div>
            {{ end }}
            </div>
          </div>
          {{ end }}
{{ end }}
